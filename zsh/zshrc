
# Path to oh-my-zsh configuration.
ZSH=$HOME/.dotfiles/zsh/oh-my-zsh
ZSH_CUSTOM=$HOME/.dotfiles/zsh/custom

# Set name of the theme to load. Set to "random" for a random theme.
ZSH_THEME='kagami'
# Disable special characters on prompt when not connected with iTerm
if [[ "$TERM_PROGRAM" != "iTerm.app" ]] then
  ZSH_THEME_NO_SPECIAL_CHARACTERS="true"
fi

# vi sucks, vim is awesome
alias vi="vim"

# disable shell-builtin "r" so I can access the "r" executable
disable r

# set locale explicitly
export LC_ALL="en_US.UTF-8"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Disable bi-weekly auto-update checks of oh-my-zsh
DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(git zsh-syntax-highlighting zaw)

# Platform-specific configuration
platform=`uname`
if [[ $platform == 'Darwin' ]] then
  # Mac OS X configuration

  # LaTeX
  export PATH=/usr/texbin:$PATH

  # git installed by installer from git-scm.org
  # (I wasn't able to successfully build git from source on my new machine)
  if [[ -d "/usr/local/git/bin" ]]; then
    export PATH=/usr/local/git/bin:$PATH
  fi

  # needed for homebrew
  export PATH=/usr/local/sbin:$PATH

  # smlnj (installed by homebrew and not linked to /usr/local)
  export PATH=$PATH:/usr/local/Cellar/smlnj/110.75/libexec/bin

  # needed for right postgresql version
  export PATH=/usr/local/bin:$PATH

  # standard rails environment on this machine
  # be careful when running tests though as they will need the 'test' environment explicitly specified.
  export RAILS_ENV='development'

  # Use MacVim to edit files, and give focus back to iTerm after closing
  export EDITOR="/usr/local/bin/mvim -f -c 'au VimLeave * !open -a iTerm'"
  alias mvim="/usr/local/bin/mvim -c 'au VimLeave * !open -a iTerm'"
  # but stay in console for git commit messages
  export GIT_EDITOR='/usr/local/bin/vim'

  # Show hidden files in Finder
  alias finder-show-hidden-files='defaults write com.apple.Finder AppleShowAllFiles YES && killall Finder && open -g /System/Library/CoreServices/Finder.app'
  alias finder-hide-hidden-files='defaults write com.apple.Finder AppleShowAllFiles NO  && killall Finder && open -g /System/Library/CoreServices/Finder.app'

  # Some aliases
  alias hashcat='/Users/Jakob/Applications/hashcat'
  alias color_test='for code in {000..255}; do print -P -- "$code: %F{$code}Test%f"; done | column -c 250'
  alias openssl='/usr/local/opt/openssl/bin/openssl'
  alias dtw='~/server/dango/transmission-web.sh -f'
  alias dtr='~/server/dango/transmission-remote.sh'

  # Directory shortcuts
  Uni=~/Documents/Uni
  CompSci=$Uni/Informatik
  Math=$Uni/Mathematik

  # Autojump
  [[ -s `brew --prefix`/etc/autojump.sh ]] && . `brew --prefix`/etc/autojump.sh

  # additional oh-my-zsh plugins
  plugins+=osx
  plugins+=brew
  plugins+=capistrano

elif [[ $platform == 'FreeBSD' ]] then
  # FreeBSD configuration

  export EDITOR='/usr/local/bin/vim'

elif [[ $platform == 'Linux' ]] then
  # Linux configuration

  export EDITOR='/usr/bin/vim'
fi

source $ZSH/oh-my-zsh.sh

# Configure zaw
bindkey '^R' zaw-history
bindkey -M filterselect '^R' down-line-or-history
bindkey -M filterselect '^S' up-line-or-history
bindkey -M filterselect '^E' accept-search

#zstyle ':filter-select:highlight' matched fg=green
zstyle ':filter-select' max-lines 15
zstyle ':filter-select' rotate-list yes
zstyle ':filter-select' case-insensitive yes
zstyle ':filter-select' extended-search yes # see https://github.com/zsh-users/zaw for explanation
