# Path to dotfiles
JR_DOTFILES="$HOME/.dotfiles"
if [[ -L "$JR_DOTFILES" ]] then
  JR_DOTFILES=$(readlink -n $JR_DOTFILES)
fi
export JR_DOTFILES

# Path to oh-my-zsh configuration.
ZSH=$JR_DOTFILES/zsh/oh-my-zsh
ZSH_CUSTOM=$JR_DOTFILES/zsh/custom

# Set name of the theme to load. Set to "random" for a random theme.
ZSH_THEME='kagami'
# Disable special characters on prompt when not connected with iTerm
if [[ "$TERM_PROGRAM" != "iTerm.app" ]] then
  ZSH_THEME_NO_SPECIAL_CHARACTERS="true"
fi

# vi sucks, vim is awesome
alias vi="vim"

# disable shell-builtin "r" so I can access the "r" executable
disable r

# set locale explicitly
export LC_ALL="en_US.UTF-8"

# Set to this to use case-sensitive completion
# CASE_SENSITIVE="true"

# Disable bi-weekly auto-update checks of oh-my-zsh
DISABLE_AUTO_UPDATE="true"

# Uncomment to change how many often would you like to wait before auto-updates occur? (in days)
# export UPDATE_ZSH_DAYS=13

# Uncomment following line if you want to disable colors in ls
# DISABLE_LS_COLORS="true"

# Uncomment following line if you want to disable autosetting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment following line if you want red dots to be displayed while waiting for completion
# COMPLETION_WAITING_DOTS="true"

# Which plugins would you like to load? (plugins can be found in ~/.oh-my-zsh/plugins/*)
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
plugins=(zaw zsh-syntax-highlighting zsh-dwim)

# Platform-specific configuration
if [[ $OSTYPE =~ ^darwin ]] then
  # Mac OS X configuration

  # LaTeX
  export PATH=/usr/texbin:$PATH

  # Homebrew paths
  export PATH=/usr/local/sbin:$PATH
  export PATH=/usr/local/bin:$PATH

  # Cabal binaries
  export PATH=$HOME/.cabal/bin:$PATH

  # standard rails environment on this machine
  # be careful when running tests though as they will need the 'test' environment explicitly specified.
  export RAILS_ENV='development'

  # Use MacVim to edit files, and give focus back to iTerm after closing
  export EDITOR="/usr/local/bin/mvim -p --nofork -c 'au VimLeave * !/usr/bin/open -a iTerm'"
  # only focus iTerm if the same shell is still open
  alias mvim="/usr/local/bin/mvim -p -c 'au VimLeave * !/usr/bin/pgrep zsh | /usr/bin/grep $$ && /usr/bin/open -a iTerm'"
  function m() {
    function vim_binary() {
      # local vim_binary_path="/usr/local/Cellar/macvim/7.4-73_1/MacVim.app/Contents/MacOS/Vim"
      local vim_binary_path="/usr/local/bin/mvim"
      $vim_binary_path -g "${@}"
    }
    # TODO: When starting a new instance, add the code to switch back to the terminal on exit
    # TODO: Maybe use this server: $(vim --serverlist|tail -n 1)   (latest one started)
    # Maybe it's possible to use a specific vim server per "project"?
    if [[ -z "${@}" ]] then
      if [[ -z "$(vim_binary --serverlist)" ]] then
        # No vim instances running? start a new one
        vim_binary
      else
        # vim_binary --remote-send '<Esc>:tabnew<CR>' --remote-expr 'foreground()'
        vim_binary --remote-send '<Esc>:tabnew<CR>:call foreground()<CR>'
      fi
    else
      vim_binary --remote-tab-silent "${@}"
    fi
  }
  # stay in console for git commit messages
  export GIT_EDITOR='/usr/local/bin/vim'

  # Show hidden files in Finder
  # If it doesn't work, try `killall cfprefsd` first (http://apple.stackexchange.com/a/112091)
  alias finder-show-hidden-files='/usr/bin/defaults write com.apple.finder AppleShowAllFiles -bool TRUE  && /usr/bin/killall Finder && /usr/bin/open -g /System/Library/CoreServices/Finder.app'
  alias finder-hide-hidden-files='/usr/bin/defaults write com.apple.finder AppleShowAllFiles -bool FALSE && /usr/bin/killall Finder && /usr/bin/open -g /System/Library/CoreServices/Finder.app'

  # Some aliases
  alias libreoffice='$HOME/Applications/LibreOffice.app/Contents/MacOS/soffice'
  alias color_test='for code in {000..255}; do print -P -- "$code: %F{$code}Test%f"; done | column -c 250'
  alias openssl='/usr/local/opt/openssl/bin/openssl'
  alias dtw='$HOME/server/raspberrypi/transmission-web.sh -f'
  alias dtr='$HOME/server/raspberrypi/transmission-remote.sh'
  alias pplex='java -jar $HOME/code/other/pplex/pplex.jar -nogui'
  alias pplex-gui='java -jar $HOME/code/other/pplex/pplex.jar'
  alias protege='$HOME/Documents/Uni/INFO116/Protege_5.0_beta/run.command'
  alias jsonld='$HOME/code/other/jsonld.js/bin/jsonld'
  alias clang-format='$HOME/Applications/clang+llvm-3.5.0-macosx-apple-darwin/bin/clang-format'

  # Open yesterday's or today's journal entry (day changes at 12:00)
  # Can open shift day with Â±number as first argument (e.g. "mj -1")
  function mj() {
    if [[ ! "${1}" =~ ^[+-][0-9]+$ ]] then
      1='+0'
    fi
    (cd "$HOME/Documents/journal" && m "./$(date "-v-12H" "-v${1}d" "+%Y-%m-%d")".txt)
  }

  function o() {
    if [[ -z "${@}" ]] then
      /usr/bin/open .
    else
      /usr/bin/open "${@}"
    fi
  }

  # Directory shortcuts
  Uni=$HOME/Documents/Uni
  CS=$Uni/Informatik
  Math=$Uni/Mathematik

  # Autojump (this is slow!)
  [[ -s /usr/local/etc/autojump.sh ]] && . /usr/local/etc/autojump.sh
  # eval "$(fasd --init auto)"

  # additional oh-my-zsh plugins
  plugins+=osx

elif [[ $OSTYPE =~ ^freebsd ]] then
  # FreeBSD configuration

  export EDITOR='/usr/local/bin/vim'

elif [[ $OSTYPE =~ ^linux ]] then
  # Linux configuration

  export EDITOR='/usr/bin/vim'
fi

# Load oh-my-zsh
source $ZSH/oh-my-zsh.sh
